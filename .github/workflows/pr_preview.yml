name: PR Preview Deployment

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]

jobs:
  deploy_preview:
    name: Build and Deploy PR Preview
    runs-on: ubuntu-latest
    environment: preview
    permissions:
      contents: read
      actions: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Setup Node
        uses: "./.github/actions/setup_node"

      - name: Install Dependencies
        uses: "./.github/actions/npm_install_from_cache"

      - name: Build
        uses: "./.github/actions/build"
        with:
          NODE_ENV: preview
          REF_NAME: ${{ github.head_ref }}
          R2_PROJECT_NAME: ${{ vars.R2_PROJECT_NAME }}
          CROWDIN_BRANCH_NAME: ${{ vars.CROWDIN_BRANCH_NAME }}
          REMOTE_CONFIG_URL: ${{ vars.REMOTE_CONFIG_URL }}

      - name: Deploy to Cloudflare Pages Preview
        id: deploy
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          npm i wrangler@3.1.0
          cd packages/core
          
          # Create a unique branch name for this PR
          BRANCH_NAME="pr-${{ github.event.number }}"
          
          # Deploy to Cloudflare Pages with PR-specific branch
          DEPLOYMENT_OUTPUT=$(npx wrangler pages deploy dist/ --project-name=derivatives-trader --branch="$BRANCH_NAME" --compatibility-date=2023-05-18)
          
          # Extract the preview URL from the deployment output
          PREVIEW_URL=$(echo "$DEPLOYMENT_OUTPUT" | grep -o 'https://[^[:space:]]*\.derivatives-trader\.pages\.dev' | head -1)
          
          # If we can't extract from output, construct the URL
          if [ -z "$PREVIEW_URL" ]; then
            PREVIEW_URL="https://$BRANCH_NAME.derivatives-trader.pages.dev"
          fi
          
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $PREVIEW_URL"

      - name: Comment PR with Preview Link
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = '${{ steps.deploy.outputs.PREVIEW_URL }}';
            const prNumber = context.issue.number;
            
            // Check if we already have a comment from this bot
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸš€ Preview deployment')
            );
            
            const commentBody = `ðŸš€ **Preview deployment ready!**
            
            âœ… Your changes have been deployed to a preview environment.
            
            **Preview URL:** ${previewUrl}
            
            This preview will be updated automatically when you push new commits to this PR.
            
            ---
            *Deployed from commit: ${context.sha.substring(0, 7)}*`;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }

  cleanup_preview:
    name: Cleanup Preview on PR Close
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    environment: preview
    permissions:
      contents: read
      actions: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Setup Node
        uses: "./.github/actions/setup_node"

      - name: Cleanup Cloudflare Pages Deployment
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          npm i wrangler@3.1.0
          cd packages/core
          
          BRANCH_NAME="pr-${{ github.event.number }}"
          
          # Try to delete the deployment (this might fail if the deployment doesn't exist, which is fine)
          npx wrangler pages deployment list --project-name=derivatives-trader --compatibility-date=2023-05-18 | grep "$BRANCH_NAME" || echo "No deployment found for branch $BRANCH_NAME"

      - name: Comment PR with Cleanup Notice
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            
            const commentBody = `ðŸ§¹ **Preview deployment cleaned up**
            
            The preview deployment for this PR has been removed as the PR was closed.
            
            ---
            *Cleanup completed for PR #${prNumber}*`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });
