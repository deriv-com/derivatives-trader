{
  "lastUpdated": "2025-08-08T07:18:46.551Z",
  "totalMergedPRs": 13,
  "analyses": [
    {
      "percentage": 0,
      "totalCharacters": 15160,
      "aiCharacters": 0,
      "files": [
        {
          "name": "packages/core/src/App/Components/Layout/Header/account-actions.tsx",
          "totalCharacters": 1392,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "\nimport { localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\n\nimport { LoginButtonV2 } from './login-button-v2';\n\n    // onClickDeposit: () => void; // Commented out - d..."
        },
        {
          "name": "packages/core/src/App/Components/Layout/Header/account-info.jsx",
          "totalCharacters": 66,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "            {isDesktop && <div className='acc-info__separator' />}"
        },
        {
          "name": "packages/core/src/App/Components/Layout/Header/login-button-v2.tsx",
          "totalCharacters": 735,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@deriv/components';\nimport { brand_url } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\n..."
        },
        {
          "name": "packages/core/src/App/Components/Layout/Header/toggle-menu-drawer.jsx",
          "totalCharacters": 1130,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "import { useLocation } from 'react-router-dom';\nimport { useAccountSettingsRedirect, useIsHubRedirectionEnabled, /* useOauth2, */ useRemoteConfig } from '@deriv/api';\n    // TODO: Commented out legacy..."
        },
        {
          "name": "packages/core/src/App/Containers/Layout/header/header-account-actions.tsx",
          "totalCharacters": 523,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    // onClickDeposit: () => void; // TODO: Temporarily hidden deposit button, remove if no longer needed\nconst HeaderAccountActions = observer(({ is_traders_hub_routes }: THeaderAccountActions) => {\n..."
        },
        {
          "name": "packages/core/src/App/Containers/Layout/header/header-legacy.tsx",
          "totalCharacters": 97,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "import HubButton from './hub-button';\n                            {is_logged_in && <HubButton />}"
        },
        {
          "name": "packages/core/src/App/Containers/Layout/header/hub-button.tsx",
          "totalCharacters": 773,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "import React from 'react';\n\nimport { Icon, Text } from '@deriv/components';\nimport { brand_url } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize } from '@deriv/transl..."
        },
        {
          "name": "packages/core/src/Services/logout.js",
          "totalCharacters": 138,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    // Clear V2 authentication session tokens\n    localStorage.removeItem('session_token');\n    localStorage.removeItem('session_expiry');"
        },
        {
          "name": "packages/core/src/Services/socket-general.js",
          "totalCharacters": 1254,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "                    // Check if this is a V2 authentication response (session token based)\n                    const hasSessionToken = localStorage.getItem('session_token');\n                    const ..."
        },
        {
          "name": "packages/core/src/Stores/client-store.js",
          "totalCharacters": 8439,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    responseAuthorize(response) {\n        // Check if this is a V2 response (no account_list)\n        const isV2Response = !response.authorize.account_list;\n\n        if (isV2Response) {\n            //..."
        },
        {
          "name": "packages/core/src/Stores/traders-hub-store.js",
          "totalCharacters": 99,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        const { account_list, switchAccount, prev_real_account_loginid, has_active_real_account } ="
        },
        {
          "name": "packages/core/src/_common/base/socket_base.js",
          "totalCharacters": 151,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    const getSessionToken = oneTimeToken =>\n        deriv_api.send({\n            get_session_token: oneTimeToken,\n        });\n\n        getSessionToken,"
        },
        {
          "name": "packages/core/src/index.tsx",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/core/src/sass/app/_common/components/account-switcher.scss",
          "totalCharacters": 112,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        /* Removed hover effect for acc-info */\n        /* &:hover:not(.show):not(&--is-disabled) {\n        } */"
        },
        {
          "name": "packages/shared/src/utils/routes/routes.ts",
          "totalCharacters": 251,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "// External URLs for brand navigation\nexport const brand_url = {\n    base: 'https://staging-app.champion.trade/champion',\n    home: 'https://staging-app.champion.trade/champion/home',\n    login: 'http..."
        }
      ],
      "timestamp": "2025-08-08T07:18:46.502Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "95",
      "branch": "farabi/new-authentication-flow",
      "author": "farabi-deriv",
      "prTitle": "Farabi/new-authentication-flow",
      "hasAnalysis": true
    },
    {
      "percentage": 0,
      "totalCharacters": 971,
      "aiCharacters": 0,
      "files": [
        {
          "name": "packages/shared/src/utils/helpers/active-symbols.ts",
          "totalCharacters": 354,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    if (!active_symbols.length) {\n        return false;\n    }\n\n    // Handle empty or invalid symbols\n    if (!symbol || symbol.trim() === '') {\n        return false;\n    }\n\n    const found_symbol = a..."
        },
        {
          "name": "packages/trader/src/Stores/Modules/Trading/trade-store.ts",
          "totalCharacters": 617,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        if (this.previous_symbol && this.previous_symbol.trim() !== '') {\n            this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n        } else {\n            this..."
        }
      ],
      "timestamp": "2025-08-07T08:27:47.201Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "108",
      "branch": "b-market-closed",
      "author": "akmal-deriv",
      "prTitle": "Akmal / fix: improve market status handling for symbols in TradeStore",
      "hasAnalysis": true
    },
    {
      "percentage": 0,
      "totalCharacters": 1252,
      "aiCharacters": 0,
      "files": [
        {
          "name": "packages/core/src/Stores/Helpers/chart-marker-helpers.js",
          "totalCharacters": 359,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    const entry_spot_time = contract_info.entry_spot_time ?? contract_info.entry_tick_time;\n    const entry_tick = contract_info.entry_spot ?? contract_info.entry_tick_display_value;\n    const exit_sp..."
        },
        {
          "name": "packages/core/src/Stores/Helpers/chart-markers.js",
          "totalCharacters": 385,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "\n    // Backward compatibility: use new property names with fallback to old ones\n    const entry_spot = contract_info.entry_spot ?? entry_tick;\n    const exit_spot = contract_info.exit_spot ?? exit_ti..."
        },
        {
          "name": "packages/core/src/Stores/contract-trade-store.js",
          "totalCharacters": 274,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "                const entry_value = info.entry_spot ?? info.entry_tick;\n                if (trade_type_is_supported && is_call_put && ((info.barrier && entry_value) || info.shortcode)) {\n             ..."
        },
        {
          "name": "packages/core/src/Stores/portfolio-store.js",
          "totalCharacters": 234,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        // workaround if no exit_spot/exit_tick in proposal_open_contract, use latest spot\n        this.positions[i].exit_spot =\n            contract_response.exit_spot ?? contract_response.exit_tick ..."
        }
      ],
      "timestamp": "2025-08-07T08:24:05.736Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "107",
      "branch": "jim/fix-markers-2",
      "author": "jim-deriv",
      "prTitle": "feat: replace entry_tick/exit_tick with entry_spot/exit_spot with bacâ€¦",
      "hasAnalysis": true
    },
    {
      "percentage": 0,
      "totalCharacters": 0,
      "aiCharacters": 0,
      "files": [],
      "timestamp": "2025-08-06T08:29:27.897Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "103",
      "branch": "undo-testing-official-workflow",
      "author": "prince-deriv",
      "prTitle": "Prince/ remove testing file",
      "hasAnalysis": true
    },
    {
      "percentage": 98,
      "totalCharacters": 707,
      "aiCharacters": 695,
      "files": [
        {
          "name": "fibonacci.js",
          "totalCharacters": 707,
          "aiCharacters": 695,
          "percentage": 98,
          "addedContent": "// [AI]\nfunction fibonacci(n) {\n    if (n <= 0) return [];\n    if (n === 1) return [0];\n    if (n === 2) return [0, 1];\n    \n    const sequence = [0, 1];\n    for (let i = 2; i < n; i++) {\n        sequ..."
        }
      ],
      "timestamp": "2025-08-06T08:23:55.325Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "101",
      "branch": "test-official-workflows",
      "author": "prince-deriv",
      "prTitle": "Prince/ testing official workflows",
      "hasAnalysis": true
    },
    {
      "percentage": 87,
      "totalCharacters": 257,
      "aiCharacters": 224,
      "files": [
        {
          "name": ".github/workflows/ai-code-analysis.yml",
          "totalCharacters": 130,
          "aiCharacters": 114,
          "percentage": 88,
          "addedContent": "    # [AI]  This is generated code by AI\n    uses: deriv-com/shared-actions/.github/workflows/ai-code-analysis.yml@v4\n    # [/AI] "
        },
        {
          "name": ".github/workflows/ai-dashboard.yml",
          "totalCharacters": 127,
          "aiCharacters": 110,
          "percentage": 87,
          "addedContent": "    # [AI]  This is generated code by AI\n    uses: deriv-com/shared-actions/.github/workflows/ai-dashboard.yml@v4\n    # [/AI] \n"
        }
      ],
      "timestamp": "2025-08-06T08:13:11.888Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "99",
      "branch": "update-ai-workflow-source",
      "author": "prince-deriv",
      "prTitle": "Prince/update workflow to use official deriv-com reusable workflow",
      "hasAnalysis": true
    },
    {
      "percentage": 0,
      "totalCharacters": 1529,
      "aiCharacters": 0,
      "files": [
        {
          "name": "__mocks__/utils.mock.js",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/components/src/components/contract-card/contract-card-items/contract-card-header.tsx",
          "totalCharacters": 113,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "                    'dc-contract-card__grid-underlying-trade--trader--accumulator': !is_mobile && is_accumulator,"
        },
        {
          "name": "packages/components/src/components/icon/icons.js",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/components/src/components/types/icons.types.ts",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/components/src/index.ts",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/core/build/loaders-config.js",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/core/src/App/Components/Layout/Header/account-info-wrapper.tsx",
          "totalCharacters": 118,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        <Popover alignment={is_dtrader_v2 && is_mobile ? 'bottom' : 'left'} message={disabled_message} zIndex='99999'>"
        },
        {
          "name": "packages/core/src/App/Containers/AccountSwitcher/account-switcher-account-list.jsx",
          "totalCharacters": 148,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "import { formatMoney, getCurrencyName, getCurrencyDisplayCode } from '@deriv/shared';\n                        className={classNames('badge-server')}"
        },
        {
          "name": "packages/core/src/App/app.jsx",
          "totalCharacters": 497,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "                                <TranslationProvider defaultLang={language} i18nInstance={i18nInstance}>\n                                    {/* This is required as translation provider uses suspense ..."
        },
        {
          "name": "packages/core/src/Constants/form-error-messages.js",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/core/src/Stores/common-store.js",
          "totalCharacters": 97,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        return platforms[this.platform]?.platform_name === platforms.tradershub_os.platform_name;"
        },
        {
          "name": "packages/core/src/Stores/traders-hub-store.js",
          "totalCharacters": 107,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "import { CFD_PLATFORMS, ContentFlag } from '@deriv/shared';\n        // await this.getMT5AccountKYCStatus();"
        },
        {
          "name": "packages/reports/build/loaders-config.js",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/reports/src/Components/Elements/Modals/MarketUnavailableModal/market-unavailable.tsx",
          "totalCharacters": 186,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "            cancel_button_text={localize('Go to SmartTrader')}\n                i18n_default_text='This market is not yet available on {{platform_name_trader}}, but it is on SmartTrader.'"
        },
        {
          "name": "packages/shared/src/index.ts",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/shared/src/loaders/deriv-trader-loader.js",
          "totalCharacters": 36,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "import the corresponding stylesheet."
        },
        {
          "name": "packages/shared/src/utils/brand/brand.ts",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/shared/src/utils/platform/platform.ts",
          "totalCharacters": 41,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "            return platform_name.DTrader;"
        },
        {
          "name": "packages/shared/src/utils/validation/form-error-messages-types.ts",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/stores/src/mockStore.ts",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/stores/types.ts",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/trader/build/loaders-config.js",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/trader/src/App/Components/Elements/Modals/MarketUnavailableModal/market-unavailable.tsx",
          "totalCharacters": 186,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "            cancel_button_text={localize('Go to SmartTrader')}\n                i18n_default_text='This market is not yet available on {{platform_name_trader}}, but it is on SmartTrader.'"
        },
        {
          "name": "packages/trader/src/Stores/Modules/Trading/trade-store.ts",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        },
        {
          "name": "packages/utils/src/index.ts",
          "totalCharacters": 0,
          "aiCharacters": 0,
          "percentage": 0,
          "note": "No added content in this PR"
        }
      ],
      "timestamp": "2025-08-06T06:52:02.292Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "97",
      "branch": "matin/icons-cleanup",
      "author": "matin-deriv",
      "prTitle": "Matin/Clean-up Icons & Tradershub Store",
      "hasAnalysis": true
    },
    {
      "percentage": 0,
      "totalCharacters": 13107,
      "aiCharacters": 0,
      "files": [
        {
          "name": "AI-DASHBOARD.md",
          "totalCharacters": 1864,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "| Metric                      | Value | Metric                       | Value                    |\n| --------------------------- | ----- | ---------------------------- | ------------------------ |\n| **..."
        },
        {
          "name": "packages/components/src/components/positions-drawer-card/positions-drawer-card.tsx",
          "totalCharacters": 408,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    // @ts-expect-error TContractInfo has an invalid type, this will be fixed in a future update\n    const is_crypto = isCryptoContract(contract_info?.underlying_symbol || '');\n    const effective_und..."
        },
        {
          "name": "packages/core/src/Stores/Helpers/chart-marker-helpers.js",
          "totalCharacters": 719,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    // Backward compatibility: fallback to entry_tick_time if entry_spot_time is not available\n    const entry_spot_time = contract_info.entry_spot_time || contract_info.entry_tick_time;\n    if (!entr..."
        },
        {
          "name": "packages/core/src/Stores/Helpers/chart-markers.js",
          "totalCharacters": 1762,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        const { tick_stream: ticks } = contract_info || {};\n        // Backward compatibility: fallback to old field name\n        const exit_spot_time = contract_info.exit_spot_time || contract_info.e..."
        },
        {
          "name": "packages/core/src/Stores/contract-trade-store.js",
          "totalCharacters": 866,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "            .filter(c => {\n                // Backward compatibility: fallback to old field name\n                const contract_underlying = c.contract_info.underlying_symbol || c.contract_info.underl..."
        },
        {
          "name": "packages/core/src/Stores/notification-store.js",
          "totalCharacters": 229,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "            // Backward compatibility: fallback to old field name\n            symbol: getMarketName(\n                (contract_info.underlying_symbol || underlying) ?? extractInfoFromShortcode(shortco..."
        },
        {
          "name": "packages/core/src/Stores/portfolio-store.js",
          "totalCharacters": 464,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        contract_info.exit_spot_time = contract_info.date_expiry;\n        this.positions[i].sell_time = getEndTime(contract_response) || contract_response.current_spot_time; // same as exit_spot, use ..."
        },
        {
          "name": "packages/reports/src/Constants/data-table-constants.tsx",
          "totalCharacters": 286,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "            if (!row_obj.contract_info) return '-';\n\n            // Backward compatibility: fallback to old field name\n            const contract_underlying = row_obj.contract_info.underlying_symbol |..."
        },
        {
          "name": "packages/reports/src/Containers/mobile-row-renderer.tsx",
          "totalCharacters": 67,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    }, [row.contract_info?.underlying_symbol, measure, is_footer]);"
        },
        {
          "name": "packages/shared/src/utils/contract/contract.tsx",
          "totalCharacters": 556,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "export const getContractStatus = (contract_info: TContractInfo) => {\n    // Backward compatibility: handle both old and new field names\n    // @ts-expect-error - exit_spot_time exists in runtime but n..."
        },
        {
          "name": "packages/shared/src/utils/helpers/logic.ts",
          "totalCharacters": 927,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        // @ts-expect-error - exit_spot_time exists in runtime but not in type definition\n        exit_spot_time,\n        Number(date_expiry) > Number(exit_spot_time) && !normalizedIsPathDependent ? d..."
        },
        {
          "name": "packages/trader/src/App/Components/Elements/ContractAudit/contract-details.tsx",
          "totalCharacters": 478,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        // @ts-expect-error contract_info is not typed correctly this will not be an issue after the types are fixed\n        entry_spot_time,\n        // @ts-expect-error contract_info is not typed cor..."
        },
        {
          "name": "packages/trader/src/App/Components/Elements/ContractDrawer/contract-drawer-card.tsx",
          "totalCharacters": 316,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        // Backward compatibility: fallback to old field name\n        // @ts-expect-error - underlying_symbol exists in runtime but not in type definition\n        const contract_underlying = contract_..."
        },
        {
          "name": "packages/trader/src/AppV2/Components/CurrentSpot/current-spot.tsx",
          "totalCharacters": 339,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    //\n    const { contract_id, entry_tick, date_start, contract_type, tick_stream } = contract_info;\n    // Backward compatibility: fallback to old field name\n    //@ts-expect-error TContractInfo has..."
        },
        {
          "name": "packages/trader/src/AppV2/Components/EntryExitDetails/entry-exit-details.tsx",
          "totalCharacters": 454,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        //@ts-expect-error contract_info is not typed correctly this will not be an issue after the types are fixed\n        entry_spot_time,\n        // @ts-expect-error contract_info is not typed corr..."
        },
        {
          "name": "packages/trader/src/AppV2/Components/PurchaseButton/purchase-button.tsx",
          "totalCharacters": 896,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "            !!active_positions.find(({ contract_info, type }) => {\n                // Backward compatibility: fallback to old field name\n                // @ts-expect-error - underlying_symbol exists ..."
        },
        {
          "name": "packages/trader/src/AppV2/Hooks/useOrderDetails.ts",
          "totalCharacters": 161,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "            (isResetContract(data.contract_type)\n                ? addComma(data.entry_spot?.toString() || '')\n                : getBarrierValue(data)) || ' - ',"
        },
        {
          "name": "packages/trader/src/Modules/Contract/Components/Digits/digits.tsx",
          "totalCharacters": 333,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        // Backward compatibility: fallback to old field name\n        // @ts-expect-error - underlying_symbol exists in runtime but not in type definition\n        const contract_underlying = contract_..."
        },
        {
          "name": "packages/trader/src/Modules/Contract/Containers/replay-chart.tsx",
          "totalCharacters": 309,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        // Backward compatibility: fallback to old field name\n        //@ts-expect-error TContractInfo has an invalid type, this will be fixed in a future update\n        const symbol = contract_info.u..."
        },
        {
          "name": "packages/trader/src/Modules/SmartChart/Components/Markers/accumulators-chart-elements.tsx",
          "totalCharacters": 495,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    const accumulators_positions = all_positions.filter(({ contract_info }) => {\n        if (!contract_info) return false;\n\n        // Backward compatibility: fallback to old field name\n        // @ts..."
        },
        {
          "name": "packages/trader/src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-tooltip.tsx",
          "totalCharacters": 264,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    // @ts-expect-error contract_info is not typed correctly this will not be an issue after the types are fixed\n    exit_spot_time,\n            if (exit_spot_time && exit_tick) {\n                    ..."
        },
        {
          "name": "packages/trader/src/Modules/Trading/Containers/purchase.tsx",
          "totalCharacters": 452,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "        ? all_positions.find(({ contract_info, type }) => {\n              // Backward compatibility: fallback to old field name\n              // @ts-expect-error - underlying_symbol exists in runtime ..."
        },
        {
          "name": "packages/trader/src/Stores/Modules/Trading/Helpers/proposal.ts",
          "totalCharacters": 211,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "    // display_value property has been removed from the API\n    // Using ask_price as fallback since display_value is no longer provided\n    const stake = proposal.ask_price ? proposal.ask_price.toStr..."
        },
        {
          "name": "packages/trader/src/Stores/Modules/Trading/trade-store.ts",
          "totalCharacters": 251,
          "aiCharacters": 0,
          "percentage": 0,
          "addedContent": "                ({ contract_info, type }) =>\n                    //@ts-expect-error TContractInfo has an invalid type. This will be fixed in the future.\n                    isAccumulatorContract(type)..."
        }
      ],
      "timestamp": "2025-08-06T02:18:36.726Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "94",
      "branch": "jim/fix-markers-1",
      "author": "jim-deriv",
      "prTitle": "fix: migrate API field usage for proposal_open_contract changes",
      "hasAnalysis": true
    },
    {
      "timestamp": "2025-08-04T07:15:35.564Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "1",
      "branch": "dependabot/npm_and_yarn/webpack-dev-server-5.2.1",
      "author": "dependabot[bot]",
      "prTitle": "build(deps-dev): bump webpack-dev-server from 5.2.0 to 5.2.1",
      "hasAnalysis": false,
      "percentage": 0,
      "totalCharacters": 0,
      "aiCharacters": 0,
      "files": []
    },
    {
      "timestamp": "2025-08-04T06:54:33.001Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "3",
      "branch": "dependabot/npm_and_yarn/babel/helpers-7.27.6",
      "author": "dependabot[bot]",
      "prTitle": "build(deps): bump @babel/helpers from 7.26.7 to 7.27.6",
      "hasAnalysis": false,
      "percentage": 0,
      "totalCharacters": 0,
      "aiCharacters": 0,
      "files": []
    },
    {
      "timestamp": "2025-08-04T06:53:01.752Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "4",
      "branch": "dependabot/npm_and_yarn/babel/runtime-7.27.6",
      "author": "dependabot[bot]",
      "prTitle": "build(deps): bump @babel/runtime from 7.26.7 to 7.27.6",
      "hasAnalysis": false,
      "percentage": 0,
      "totalCharacters": 0,
      "aiCharacters": 0,
      "files": []
    },
    {
      "percentage": 72,
      "totalCharacters": 96,
      "aiCharacters": 69,
      "files": [
        {
          "name": ".github/workflows/ai-code-analysis.yml",
          "totalCharacters": 48,
          "aiCharacters": 35,
          "percentage": 73,
          "addedContent": "## [AI]  This is generated code by AI\n\n## [/AI] "
        },
        {
          "name": ".github/workflows/ai-dashboard.yml",
          "totalCharacters": 48,
          "aiCharacters": 34,
          "percentage": 71,
          "addedContent": "\n## [AI]  This is generated code by AI\n## [/AI] "
        }
      ],
      "timestamp": "2025-08-01T12:41:18.913Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "85",
      "branch": "test-workflow",
      "author": "prince-deriv",
      "prTitle": "Prince/ added AI markers",
      "hasAnalysis": true
    },
    {
      "percentage": 0,
      "totalCharacters": 0,
      "aiCharacters": 0,
      "files": [],
      "timestamp": "2025-08-01T12:25:01.845Z",
      "repository": "deriv-com/derivatives-trader",
      "pullRequest": "83",
      "branch": "test-workflow",
      "author": "prince-deriv",
      "prTitle": "Prince/ empty commit to trigger workflows",
      "hasAnalysis": true
    }
  ]
}